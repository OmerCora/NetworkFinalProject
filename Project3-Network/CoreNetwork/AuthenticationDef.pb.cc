// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AuthenticationDef.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AuthenticationDef.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtocolAuthentication {

namespace {

const ::google::protobuf::Descriptor* CreateAccountWeb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateAccountWeb_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateAccountWebSuccess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateAccountWebSuccess_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateAccountWebFailure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateAccountWebFailure_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateAccountWebFailure_e_Reason_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AuthenticateWeb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticateWeb_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthenticateWebSuccess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticateWebSuccess_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthenticateWebFailure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticateWebFailure_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AuthenticateWebFailure_e_Reason_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_AuthenticationDef_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_AuthenticationDef_2eproto() {
  protobuf_AddDesc_AuthenticationDef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AuthenticationDef.proto");
  GOOGLE_CHECK(file != NULL);
  CreateAccountWeb_descriptor_ = file->message_type(0);
  static const int CreateAccountWeb_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWeb, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWeb, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWeb, plaintextpassword_),
  };
  CreateAccountWeb_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateAccountWeb_descriptor_,
      CreateAccountWeb::internal_default_instance(),
      CreateAccountWeb_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWeb, _has_bits_),
      -1,
      -1,
      sizeof(CreateAccountWeb),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWeb, _internal_metadata_));
  CreateAccountWebSuccess_descriptor_ = file->message_type(1);
  static const int CreateAccountWebSuccess_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebSuccess, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebSuccess, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebSuccess, creationdate_),
  };
  CreateAccountWebSuccess_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateAccountWebSuccess_descriptor_,
      CreateAccountWebSuccess::internal_default_instance(),
      CreateAccountWebSuccess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebSuccess, _has_bits_),
      -1,
      -1,
      sizeof(CreateAccountWebSuccess),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebSuccess, _internal_metadata_));
  CreateAccountWebFailure_descriptor_ = file->message_type(2);
  static const int CreateAccountWebFailure_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebFailure, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebFailure, reason_),
  };
  CreateAccountWebFailure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateAccountWebFailure_descriptor_,
      CreateAccountWebFailure::internal_default_instance(),
      CreateAccountWebFailure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebFailure, _has_bits_),
      -1,
      -1,
      sizeof(CreateAccountWebFailure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountWebFailure, _internal_metadata_));
  CreateAccountWebFailure_e_Reason_descriptor_ = CreateAccountWebFailure_descriptor_->enum_type(0);
  AuthenticateWeb_descriptor_ = file->message_type(3);
  static const int AuthenticateWeb_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWeb, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWeb, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWeb, plaintextpassword_),
  };
  AuthenticateWeb_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthenticateWeb_descriptor_,
      AuthenticateWeb::internal_default_instance(),
      AuthenticateWeb_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWeb, _has_bits_),
      -1,
      -1,
      sizeof(AuthenticateWeb),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWeb, _internal_metadata_));
  AuthenticateWebSuccess_descriptor_ = file->message_type(4);
  static const int AuthenticateWebSuccess_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebSuccess, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebSuccess, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebSuccess, logindate_),
  };
  AuthenticateWebSuccess_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthenticateWebSuccess_descriptor_,
      AuthenticateWebSuccess::internal_default_instance(),
      AuthenticateWebSuccess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebSuccess, _has_bits_),
      -1,
      -1,
      sizeof(AuthenticateWebSuccess),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebSuccess, _internal_metadata_));
  AuthenticateWebFailure_descriptor_ = file->message_type(5);
  static const int AuthenticateWebFailure_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebFailure, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebFailure, reason_),
  };
  AuthenticateWebFailure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthenticateWebFailure_descriptor_,
      AuthenticateWebFailure::internal_default_instance(),
      AuthenticateWebFailure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebFailure, _has_bits_),
      -1,
      -1,
      sizeof(AuthenticateWebFailure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateWebFailure, _internal_metadata_));
  AuthenticateWebFailure_e_Reason_descriptor_ = AuthenticateWebFailure_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AuthenticationDef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateAccountWeb_descriptor_, CreateAccountWeb::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateAccountWebSuccess_descriptor_, CreateAccountWebSuccess::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateAccountWebFailure_descriptor_, CreateAccountWebFailure::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthenticateWeb_descriptor_, AuthenticateWeb::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthenticateWebSuccess_descriptor_, AuthenticateWebSuccess::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthenticateWebFailure_descriptor_, AuthenticateWebFailure::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AuthenticationDef_2eproto() {
  CreateAccountWeb_default_instance_.Shutdown();
  delete CreateAccountWeb_reflection_;
  CreateAccountWebSuccess_default_instance_.Shutdown();
  delete CreateAccountWebSuccess_reflection_;
  CreateAccountWebFailure_default_instance_.Shutdown();
  delete CreateAccountWebFailure_reflection_;
  AuthenticateWeb_default_instance_.Shutdown();
  delete AuthenticateWeb_reflection_;
  AuthenticateWebSuccess_default_instance_.Shutdown();
  delete AuthenticateWebSuccess_reflection_;
  AuthenticateWebFailure_default_instance_.Shutdown();
  delete AuthenticateWebFailure_reflection_;
}

void protobuf_InitDefaults_AuthenticationDef_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  CreateAccountWeb_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateAccountWebSuccess_default_instance_.DefaultConstruct();
  CreateAccountWebFailure_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthenticateWeb_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthenticateWebSuccess_default_instance_.DefaultConstruct();
  AuthenticateWebFailure_default_instance_.DefaultConstruct();
  CreateAccountWeb_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateAccountWebSuccess_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateAccountWebFailure_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthenticateWeb_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthenticateWebSuccess_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthenticateWebFailure_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_AuthenticationDef_2eproto_once_);
void protobuf_InitDefaults_AuthenticationDef_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_AuthenticationDef_2eproto_once_,
                 &protobuf_InitDefaults_AuthenticationDef_2eproto_impl);
}
void protobuf_AddDesc_AuthenticationDef_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_AuthenticationDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027AuthenticationDef.proto\022\026ProtocolAuthe"
    "ntication\"O\n\020CreateAccountWeb\022\021\n\trequest"
    "Id\030\001 \002(\004\022\r\n\005email\030\002 \002(\t\022\031\n\021plaintextPass"
    "word\030\003 \002(\t\"R\n\027CreateAccountWebSuccess\022\021\n"
    "\trequestId\030\001 \002(\004\022\016\n\006userId\030\002 \002(\004\022\024\n\014crea"
    "tionDate\030\003 \002(\t\"\220\002\n\027CreateAccountWebFailu"
    "re\022\021\n\trequestId\030\001 \002(\004\022W\n\006reason\030\002 \002(\01628."
    "ProtocolAuthentication.CreateAccountWebF"
    "ailure.e_Reason:\rUNKNOWN_ERROR\"\210\001\n\010e_Rea"
    "son\022\021\n\rUNKNOWN_ERROR\020\000\022\032\n\026ACCOUNT_ALREAD"
    "Y_EXISTS\020\001\022\024\n\020INVALID_PASSWORD\020\002\022\031\n\025INTE"
    "RNAL_SERVER_ERROR\020\003\022\034\n\030FAILED_TO_PARSE_P"
    "ROTOCOL\020\004\"N\n\017AuthenticateWeb\022\021\n\trequestI"
    "d\030\001 \002(\004\022\r\n\005email\030\002 \002(\t\022\031\n\021plaintextPassw"
    "ord\030\003 \002(\t\"N\n\026AuthenticateWebSuccess\022\021\n\tr"
    "equestId\030\001 \002(\004\022\016\n\006userId\030\002 \002(\004\022\021\n\tloginD"
    "ate\030\003 \002(\t\"\364\001\n\026AuthenticateWebFailure\022\021\n\t"
    "requestId\030\001 \002(\004\022V\n\006reason\030\002 \002(\01627.Protoc"
    "olAuthentication.AuthenticateWebFailure."
    "e_Reason:\rUNKNOWN_ERROR\"o\n\010e_Reason\022\021\n\rU"
    "NKNOWN_ERROR\020\000\022\027\n\023INVALID_CREDENTIALS\020\001\022"
    "\031\n\025INTERNAL_SERVER_ERROR\020\002\022\034\n\030FAILED_TO_"
    "PARSE_PROTOCOL\020\003", 896);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AuthenticationDef.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AuthenticationDef_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_AuthenticationDef_2eproto_once_);
void protobuf_AddDesc_AuthenticationDef_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_AuthenticationDef_2eproto_once_,
                 &protobuf_AddDesc_AuthenticationDef_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AuthenticationDef_2eproto {
  StaticDescriptorInitializer_AuthenticationDef_2eproto() {
    protobuf_AddDesc_AuthenticationDef_2eproto();
  }
} static_descriptor_initializer_AuthenticationDef_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountWeb::kRequestIdFieldNumber;
const int CreateAccountWeb::kEmailFieldNumber;
const int CreateAccountWeb::kPlaintextPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountWeb::CreateAccountWeb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AuthenticationDef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolAuthentication.CreateAccountWeb)
}

void CreateAccountWeb::InitAsDefaultInstance() {
}

CreateAccountWeb::CreateAccountWeb(const CreateAccountWeb& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtocolAuthentication.CreateAccountWeb)
}

void CreateAccountWeb::SharedCtor() {
  _cached_size_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = GOOGLE_ULONGLONG(0);
}

CreateAccountWeb::~CreateAccountWeb() {
  // @@protoc_insertion_point(destructor:ProtocolAuthentication.CreateAccountWeb)
  SharedDtor();
}

void CreateAccountWeb::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAccountWeb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountWeb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountWeb_descriptor_;
}

const CreateAccountWeb& CreateAccountWeb::default_instance() {
  protobuf_InitDefaults_AuthenticationDef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWeb> CreateAccountWeb_default_instance_;

CreateAccountWeb* CreateAccountWeb::New(::google::protobuf::Arena* arena) const {
  CreateAccountWeb* n = new CreateAccountWeb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountWeb::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolAuthentication.CreateAccountWeb)
  if (_has_bits_[0 / 32] & 7u) {
    requestid_ = GOOGLE_ULONGLONG(0);
    if (has_email()) {
      email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_plaintextpassword()) {
      plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateAccountWeb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolAuthentication.CreateAccountWeb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (tag == 8) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_email;
        break;
      }

      // required string email = 2;
      case 2: {
        if (tag == 18) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolAuthentication.CreateAccountWeb.email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_plaintextPassword;
        break;
      }

      // required string plaintextPassword = 3;
      case 3: {
        if (tag == 26) {
         parse_plaintextPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plaintextpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plaintextpassword().data(), this->plaintextpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolAuthentication.CreateAccountWeb.plaintextPassword");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolAuthentication.CreateAccountWeb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolAuthentication.CreateAccountWeb)
  return false;
#undef DO_
}

void CreateAccountWeb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolAuthentication.CreateAccountWeb)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required string email = 2;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.CreateAccountWeb.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // required string plaintextPassword = 3;
  if (has_plaintextpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), this->plaintextpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.CreateAccountWeb.plaintextPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plaintextpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolAuthentication.CreateAccountWeb)
}

::google::protobuf::uint8* CreateAccountWeb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolAuthentication.CreateAccountWeb)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required string email = 2;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.CreateAccountWeb.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // required string plaintextPassword = 3;
  if (has_plaintextpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), this->plaintextpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.CreateAccountWeb.plaintextPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plaintextpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolAuthentication.CreateAccountWeb)
  return target;
}

size_t CreateAccountWeb::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtocolAuthentication.CreateAccountWeb)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_email()) {
    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_plaintextpassword()) {
    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());
  }

  return total_size;
}
size_t CreateAccountWeb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolAuthentication.CreateAccountWeb)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountWeb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolAuthentication.CreateAccountWeb)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateAccountWeb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountWeb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolAuthentication.CreateAccountWeb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolAuthentication.CreateAccountWeb)
    UnsafeMergeFrom(*source);
  }
}

void CreateAccountWeb::MergeFrom(const CreateAccountWeb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolAuthentication.CreateAccountWeb)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateAccountWeb::UnsafeMergeFrom(const CreateAccountWeb& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_email()) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (from.has_plaintextpassword()) {
      set_has_plaintextpassword();
      plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateAccountWeb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolAuthentication.CreateAccountWeb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountWeb::CopyFrom(const CreateAccountWeb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolAuthentication.CreateAccountWeb)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateAccountWeb::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CreateAccountWeb::Swap(CreateAccountWeb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountWeb::InternalSwap(CreateAccountWeb* other) {
  std::swap(requestid_, other->requestid_);
  email_.Swap(&other->email_);
  plaintextpassword_.Swap(&other->plaintextpassword_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountWeb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateAccountWeb_descriptor_;
  metadata.reflection = CreateAccountWeb_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccountWeb

// required uint64 requestId = 1;
bool CreateAccountWeb::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateAccountWeb::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateAccountWeb::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateAccountWeb::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::uint64 CreateAccountWeb::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWeb.requestId)
  return requestid_;
}
void CreateAccountWeb::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWeb.requestId)
}

// required string email = 2;
bool CreateAccountWeb::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateAccountWeb::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateAccountWeb::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateAccountWeb::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& CreateAccountWeb::email() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWeb.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountWeb::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWeb.email)
}
void CreateAccountWeb::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.CreateAccountWeb.email)
}
void CreateAccountWeb::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.CreateAccountWeb.email)
}
::std::string* CreateAccountWeb::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.CreateAccountWeb.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateAccountWeb::release_email() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.CreateAccountWeb.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountWeb::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.CreateAccountWeb.email)
}

// required string plaintextPassword = 3;
bool CreateAccountWeb::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateAccountWeb::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateAccountWeb::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateAccountWeb::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
const ::std::string& CreateAccountWeb::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
  return plaintextpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountWeb::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}
void CreateAccountWeb::set_plaintextpassword(const char* value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}
void CreateAccountWeb::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}
::std::string* CreateAccountWeb::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateAccountWeb::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountWeb::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}

inline const CreateAccountWeb* CreateAccountWeb::internal_default_instance() {
  return &CreateAccountWeb_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountWebSuccess::kRequestIdFieldNumber;
const int CreateAccountWebSuccess::kUserIdFieldNumber;
const int CreateAccountWebSuccess::kCreationDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountWebSuccess::CreateAccountWebSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AuthenticationDef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolAuthentication.CreateAccountWebSuccess)
}

void CreateAccountWebSuccess::InitAsDefaultInstance() {
}

CreateAccountWebSuccess::CreateAccountWebSuccess(const CreateAccountWebSuccess& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtocolAuthentication.CreateAccountWebSuccess)
}

void CreateAccountWebSuccess::SharedCtor() {
  _cached_size_ = 0;
  creationdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&requestid_) + sizeof(userid_));
}

CreateAccountWebSuccess::~CreateAccountWebSuccess() {
  // @@protoc_insertion_point(destructor:ProtocolAuthentication.CreateAccountWebSuccess)
  SharedDtor();
}

void CreateAccountWebSuccess::SharedDtor() {
  creationdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAccountWebSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountWebSuccess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountWebSuccess_descriptor_;
}

const CreateAccountWebSuccess& CreateAccountWebSuccess::default_instance() {
  protobuf_InitDefaults_AuthenticationDef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWebSuccess> CreateAccountWebSuccess_default_instance_;

CreateAccountWebSuccess* CreateAccountWebSuccess::New(::google::protobuf::Arena* arena) const {
  CreateAccountWebSuccess* n = new CreateAccountWebSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountWebSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolAuthentication.CreateAccountWebSuccess)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateAccountWebSuccess, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateAccountWebSuccess*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(requestid_, userid_);
    if (has_creationdate()) {
      creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateAccountWebSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolAuthentication.CreateAccountWebSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (tag == 8) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userId;
        break;
      }

      // required uint64 userId = 2;
      case 2: {
        if (tag == 16) {
         parse_userId:
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_creationDate;
        break;
      }

      // required string creationDate = 3;
      case 3: {
        if (tag == 26) {
         parse_creationDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creationdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creationdate().data(), this->creationdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolAuthentication.CreateAccountWebSuccess.creationDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolAuthentication.CreateAccountWebSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolAuthentication.CreateAccountWebSuccess)
  return false;
#undef DO_
}

void CreateAccountWebSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolAuthentication.CreateAccountWebSuccess)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required uint64 userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  // required string creationDate = 3;
  if (has_creationdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), this->creationdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.CreateAccountWebSuccess.creationDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->creationdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolAuthentication.CreateAccountWebSuccess)
}

::google::protobuf::uint8* CreateAccountWebSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolAuthentication.CreateAccountWebSuccess)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required uint64 userId = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  // required string creationDate = 3;
  if (has_creationdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), this->creationdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.CreateAccountWebSuccess.creationDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->creationdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolAuthentication.CreateAccountWebSuccess)
  return target;
}

size_t CreateAccountWebSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtocolAuthentication.CreateAccountWebSuccess)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_userid()) {
    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  if (has_creationdate()) {
    // required string creationDate = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());
  }

  return total_size;
}
size_t CreateAccountWebSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolAuthentication.CreateAccountWebSuccess)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());

    // required string creationDate = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountWebSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolAuthentication.CreateAccountWebSuccess)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateAccountWebSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountWebSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolAuthentication.CreateAccountWebSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolAuthentication.CreateAccountWebSuccess)
    UnsafeMergeFrom(*source);
  }
}

void CreateAccountWebSuccess::MergeFrom(const CreateAccountWebSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolAuthentication.CreateAccountWebSuccess)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateAccountWebSuccess::UnsafeMergeFrom(const CreateAccountWebSuccess& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_creationdate()) {
      set_has_creationdate();
      creationdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creationdate_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateAccountWebSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolAuthentication.CreateAccountWebSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountWebSuccess::CopyFrom(const CreateAccountWebSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolAuthentication.CreateAccountWebSuccess)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateAccountWebSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CreateAccountWebSuccess::Swap(CreateAccountWebSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountWebSuccess::InternalSwap(CreateAccountWebSuccess* other) {
  std::swap(requestid_, other->requestid_);
  std::swap(userid_, other->userid_);
  creationdate_.Swap(&other->creationdate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountWebSuccess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateAccountWebSuccess_descriptor_;
  metadata.reflection = CreateAccountWebSuccess_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccountWebSuccess

// required uint64 requestId = 1;
bool CreateAccountWebSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateAccountWebSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateAccountWebSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateAccountWebSuccess::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::uint64 CreateAccountWebSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebSuccess.requestId)
  return requestid_;
}
void CreateAccountWebSuccess::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebSuccess.requestId)
}

// required uint64 userId = 2;
bool CreateAccountWebSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateAccountWebSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateAccountWebSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateAccountWebSuccess::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
::google::protobuf::uint64 CreateAccountWebSuccess::userid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebSuccess.userId)
  return userid_;
}
void CreateAccountWebSuccess::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebSuccess.userId)
}

// required string creationDate = 3;
bool CreateAccountWebSuccess::has_creationdate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateAccountWebSuccess::set_has_creationdate() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateAccountWebSuccess::clear_has_creationdate() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateAccountWebSuccess::clear_creationdate() {
  creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creationdate();
}
const ::std::string& CreateAccountWebSuccess::creationdate() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
  return creationdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountWebSuccess::set_creationdate(const ::std::string& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}
void CreateAccountWebSuccess::set_creationdate(const char* value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}
void CreateAccountWebSuccess::set_creationdate(const char* value, size_t size) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}
::std::string* CreateAccountWebSuccess::mutable_creationdate() {
  set_has_creationdate();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
  return creationdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateAccountWebSuccess::release_creationdate() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
  clear_has_creationdate();
  return creationdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountWebSuccess::set_allocated_creationdate(::std::string* creationdate) {
  if (creationdate != NULL) {
    set_has_creationdate();
  } else {
    clear_has_creationdate();
  }
  creationdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creationdate);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}

inline const CreateAccountWebSuccess* CreateAccountWebSuccess::internal_default_instance() {
  return &CreateAccountWebSuccess_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateAccountWebFailure_e_Reason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountWebFailure_e_Reason_descriptor_;
}
bool CreateAccountWebFailure_e_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::UNKNOWN_ERROR;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::ACCOUNT_ALREADY_EXISTS;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::INVALID_PASSWORD;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::INTERNAL_SERVER_ERROR;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::FAILED_TO_PARSE_PROTOCOL;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::e_Reason_MIN;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure::e_Reason_MAX;
const int CreateAccountWebFailure::e_Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountWebFailure::kRequestIdFieldNumber;
const int CreateAccountWebFailure::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountWebFailure::CreateAccountWebFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AuthenticationDef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolAuthentication.CreateAccountWebFailure)
}

void CreateAccountWebFailure::InitAsDefaultInstance() {
}

CreateAccountWebFailure::CreateAccountWebFailure(const CreateAccountWebFailure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtocolAuthentication.CreateAccountWebFailure)
}

void CreateAccountWebFailure::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&requestid_, 0, reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&requestid_) + sizeof(reason_));
}

CreateAccountWebFailure::~CreateAccountWebFailure() {
  // @@protoc_insertion_point(destructor:ProtocolAuthentication.CreateAccountWebFailure)
  SharedDtor();
}

void CreateAccountWebFailure::SharedDtor() {
}

void CreateAccountWebFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountWebFailure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountWebFailure_descriptor_;
}

const CreateAccountWebFailure& CreateAccountWebFailure::default_instance() {
  protobuf_InitDefaults_AuthenticationDef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWebFailure> CreateAccountWebFailure_default_instance_;

CreateAccountWebFailure* CreateAccountWebFailure::New(::google::protobuf::Arena* arena) const {
  CreateAccountWebFailure* n = new CreateAccountWebFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountWebFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolAuthentication.CreateAccountWebFailure)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateAccountWebFailure, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateAccountWebFailure*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(requestid_, reason_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateAccountWebFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolAuthentication.CreateAccountWebFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (tag == 8) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
      case 2: {
        if (tag == 16) {
         parse_reason:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ProtocolAuthentication::CreateAccountWebFailure_e_Reason_IsValid(value)) {
            set_reason(static_cast< ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolAuthentication.CreateAccountWebFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolAuthentication.CreateAccountWebFailure)
  return false;
#undef DO_
}

void CreateAccountWebFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolAuthentication.CreateAccountWebFailure)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolAuthentication.CreateAccountWebFailure)
}

::google::protobuf::uint8* CreateAccountWebFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolAuthentication.CreateAccountWebFailure)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
  if (has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolAuthentication.CreateAccountWebFailure)
  return target;
}

size_t CreateAccountWebFailure::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtocolAuthentication.CreateAccountWebFailure)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_reason()) {
    // required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  return total_size;
}
size_t CreateAccountWebFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolAuthentication.CreateAccountWebFailure)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountWebFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolAuthentication.CreateAccountWebFailure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateAccountWebFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountWebFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolAuthentication.CreateAccountWebFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolAuthentication.CreateAccountWebFailure)
    UnsafeMergeFrom(*source);
  }
}

void CreateAccountWebFailure::MergeFrom(const CreateAccountWebFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolAuthentication.CreateAccountWebFailure)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateAccountWebFailure::UnsafeMergeFrom(const CreateAccountWebFailure& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateAccountWebFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolAuthentication.CreateAccountWebFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountWebFailure::CopyFrom(const CreateAccountWebFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolAuthentication.CreateAccountWebFailure)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateAccountWebFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CreateAccountWebFailure::Swap(CreateAccountWebFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountWebFailure::InternalSwap(CreateAccountWebFailure* other) {
  std::swap(requestid_, other->requestid_);
  std::swap(reason_, other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountWebFailure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateAccountWebFailure_descriptor_;
  metadata.reflection = CreateAccountWebFailure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccountWebFailure

// required uint64 requestId = 1;
bool CreateAccountWebFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateAccountWebFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateAccountWebFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateAccountWebFailure::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::uint64 CreateAccountWebFailure::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebFailure.requestId)
  return requestid_;
}
void CreateAccountWebFailure::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebFailure.requestId)
}

// required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
bool CreateAccountWebFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateAccountWebFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateAccountWebFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateAccountWebFailure::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
::ProtocolAuthentication::CreateAccountWebFailure_e_Reason CreateAccountWebFailure::reason() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebFailure.reason)
  return static_cast< ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason >(reason_);
}
void CreateAccountWebFailure::set_reason(::ProtocolAuthentication::CreateAccountWebFailure_e_Reason value) {
  assert(::ProtocolAuthentication::CreateAccountWebFailure_e_Reason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebFailure.reason)
}

inline const CreateAccountWebFailure* CreateAccountWebFailure::internal_default_instance() {
  return &CreateAccountWebFailure_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateWeb::kRequestIdFieldNumber;
const int AuthenticateWeb::kEmailFieldNumber;
const int AuthenticateWeb::kPlaintextPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateWeb::AuthenticateWeb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AuthenticationDef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolAuthentication.AuthenticateWeb)
}

void AuthenticateWeb::InitAsDefaultInstance() {
}

AuthenticateWeb::AuthenticateWeb(const AuthenticateWeb& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtocolAuthentication.AuthenticateWeb)
}

void AuthenticateWeb::SharedCtor() {
  _cached_size_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = GOOGLE_ULONGLONG(0);
}

AuthenticateWeb::~AuthenticateWeb() {
  // @@protoc_insertion_point(destructor:ProtocolAuthentication.AuthenticateWeb)
  SharedDtor();
}

void AuthenticateWeb::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateWeb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateWeb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateWeb_descriptor_;
}

const AuthenticateWeb& AuthenticateWeb::default_instance() {
  protobuf_InitDefaults_AuthenticationDef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWeb> AuthenticateWeb_default_instance_;

AuthenticateWeb* AuthenticateWeb::New(::google::protobuf::Arena* arena) const {
  AuthenticateWeb* n = new AuthenticateWeb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateWeb::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolAuthentication.AuthenticateWeb)
  if (_has_bits_[0 / 32] & 7u) {
    requestid_ = GOOGLE_ULONGLONG(0);
    if (has_email()) {
      email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_plaintextpassword()) {
      plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthenticateWeb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolAuthentication.AuthenticateWeb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (tag == 8) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_email;
        break;
      }

      // required string email = 2;
      case 2: {
        if (tag == 18) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolAuthentication.AuthenticateWeb.email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_plaintextPassword;
        break;
      }

      // required string plaintextPassword = 3;
      case 3: {
        if (tag == 26) {
         parse_plaintextPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plaintextpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plaintextpassword().data(), this->plaintextpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolAuthentication.AuthenticateWeb.plaintextPassword");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolAuthentication.AuthenticateWeb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolAuthentication.AuthenticateWeb)
  return false;
#undef DO_
}

void AuthenticateWeb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolAuthentication.AuthenticateWeb)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required string email = 2;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.AuthenticateWeb.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // required string plaintextPassword = 3;
  if (has_plaintextpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), this->plaintextpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.AuthenticateWeb.plaintextPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plaintextpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolAuthentication.AuthenticateWeb)
}

::google::protobuf::uint8* AuthenticateWeb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolAuthentication.AuthenticateWeb)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required string email = 2;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.AuthenticateWeb.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // required string plaintextPassword = 3;
  if (has_plaintextpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), this->plaintextpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.AuthenticateWeb.plaintextPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plaintextpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolAuthentication.AuthenticateWeb)
  return target;
}

size_t AuthenticateWeb::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtocolAuthentication.AuthenticateWeb)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_email()) {
    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_plaintextpassword()) {
    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());
  }

  return total_size;
}
size_t AuthenticateWeb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolAuthentication.AuthenticateWeb)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateWeb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolAuthentication.AuthenticateWeb)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthenticateWeb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateWeb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolAuthentication.AuthenticateWeb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolAuthentication.AuthenticateWeb)
    UnsafeMergeFrom(*source);
  }
}

void AuthenticateWeb::MergeFrom(const AuthenticateWeb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolAuthentication.AuthenticateWeb)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthenticateWeb::UnsafeMergeFrom(const AuthenticateWeb& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_email()) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (from.has_plaintextpassword()) {
      set_has_plaintextpassword();
      plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthenticateWeb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolAuthentication.AuthenticateWeb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateWeb::CopyFrom(const AuthenticateWeb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolAuthentication.AuthenticateWeb)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthenticateWeb::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AuthenticateWeb::Swap(AuthenticateWeb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateWeb::InternalSwap(AuthenticateWeb* other) {
  std::swap(requestid_, other->requestid_);
  email_.Swap(&other->email_);
  plaintextpassword_.Swap(&other->plaintextpassword_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateWeb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticateWeb_descriptor_;
  metadata.reflection = AuthenticateWeb_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticateWeb

// required uint64 requestId = 1;
bool AuthenticateWeb::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthenticateWeb::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthenticateWeb::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthenticateWeb::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::uint64 AuthenticateWeb::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWeb.requestId)
  return requestid_;
}
void AuthenticateWeb::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWeb.requestId)
}

// required string email = 2;
bool AuthenticateWeb::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthenticateWeb::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthenticateWeb::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthenticateWeb::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& AuthenticateWeb::email() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWeb.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateWeb::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWeb.email)
}
void AuthenticateWeb::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.AuthenticateWeb.email)
}
void AuthenticateWeb::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.AuthenticateWeb.email)
}
::std::string* AuthenticateWeb::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.AuthenticateWeb.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateWeb::release_email() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.AuthenticateWeb.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateWeb::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.AuthenticateWeb.email)
}

// required string plaintextPassword = 3;
bool AuthenticateWeb::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AuthenticateWeb::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000004u;
}
void AuthenticateWeb::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
void AuthenticateWeb::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
const ::std::string& AuthenticateWeb::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
  return plaintextpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateWeb::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}
void AuthenticateWeb::set_plaintextpassword(const char* value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}
void AuthenticateWeb::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}
::std::string* AuthenticateWeb::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateWeb::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateWeb::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}

inline const AuthenticateWeb* AuthenticateWeb::internal_default_instance() {
  return &AuthenticateWeb_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateWebSuccess::kRequestIdFieldNumber;
const int AuthenticateWebSuccess::kUserIdFieldNumber;
const int AuthenticateWebSuccess::kLoginDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateWebSuccess::AuthenticateWebSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AuthenticationDef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolAuthentication.AuthenticateWebSuccess)
}

void AuthenticateWebSuccess::InitAsDefaultInstance() {
}

AuthenticateWebSuccess::AuthenticateWebSuccess(const AuthenticateWebSuccess& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtocolAuthentication.AuthenticateWebSuccess)
}

void AuthenticateWebSuccess::SharedCtor() {
  _cached_size_ = 0;
  logindate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&requestid_) + sizeof(userid_));
}

AuthenticateWebSuccess::~AuthenticateWebSuccess() {
  // @@protoc_insertion_point(destructor:ProtocolAuthentication.AuthenticateWebSuccess)
  SharedDtor();
}

void AuthenticateWebSuccess::SharedDtor() {
  logindate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateWebSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateWebSuccess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateWebSuccess_descriptor_;
}

const AuthenticateWebSuccess& AuthenticateWebSuccess::default_instance() {
  protobuf_InitDefaults_AuthenticationDef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWebSuccess> AuthenticateWebSuccess_default_instance_;

AuthenticateWebSuccess* AuthenticateWebSuccess::New(::google::protobuf::Arena* arena) const {
  AuthenticateWebSuccess* n = new AuthenticateWebSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateWebSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolAuthentication.AuthenticateWebSuccess)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AuthenticateWebSuccess, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AuthenticateWebSuccess*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(requestid_, userid_);
    if (has_logindate()) {
      logindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthenticateWebSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolAuthentication.AuthenticateWebSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (tag == 8) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userId;
        break;
      }

      // required uint64 userId = 2;
      case 2: {
        if (tag == 16) {
         parse_userId:
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loginDate;
        break;
      }

      // required string loginDate = 3;
      case 3: {
        if (tag == 26) {
         parse_loginDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logindate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logindate().data(), this->logindate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolAuthentication.AuthenticateWebSuccess.loginDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolAuthentication.AuthenticateWebSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolAuthentication.AuthenticateWebSuccess)
  return false;
#undef DO_
}

void AuthenticateWebSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolAuthentication.AuthenticateWebSuccess)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required uint64 userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  // required string loginDate = 3;
  if (has_logindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logindate().data(), this->logindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.AuthenticateWebSuccess.loginDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->logindate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolAuthentication.AuthenticateWebSuccess)
}

::google::protobuf::uint8* AuthenticateWebSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolAuthentication.AuthenticateWebSuccess)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required uint64 userId = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  // required string loginDate = 3;
  if (has_logindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logindate().data(), this->logindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolAuthentication.AuthenticateWebSuccess.loginDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->logindate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolAuthentication.AuthenticateWebSuccess)
  return target;
}

size_t AuthenticateWebSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtocolAuthentication.AuthenticateWebSuccess)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_userid()) {
    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  if (has_logindate()) {
    // required string loginDate = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logindate());
  }

  return total_size;
}
size_t AuthenticateWebSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolAuthentication.AuthenticateWebSuccess)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());

    // required string loginDate = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logindate());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateWebSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolAuthentication.AuthenticateWebSuccess)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthenticateWebSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateWebSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolAuthentication.AuthenticateWebSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolAuthentication.AuthenticateWebSuccess)
    UnsafeMergeFrom(*source);
  }
}

void AuthenticateWebSuccess::MergeFrom(const AuthenticateWebSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolAuthentication.AuthenticateWebSuccess)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthenticateWebSuccess::UnsafeMergeFrom(const AuthenticateWebSuccess& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_logindate()) {
      set_has_logindate();
      logindate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logindate_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthenticateWebSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolAuthentication.AuthenticateWebSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateWebSuccess::CopyFrom(const AuthenticateWebSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolAuthentication.AuthenticateWebSuccess)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthenticateWebSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AuthenticateWebSuccess::Swap(AuthenticateWebSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateWebSuccess::InternalSwap(AuthenticateWebSuccess* other) {
  std::swap(requestid_, other->requestid_);
  std::swap(userid_, other->userid_);
  logindate_.Swap(&other->logindate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateWebSuccess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticateWebSuccess_descriptor_;
  metadata.reflection = AuthenticateWebSuccess_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticateWebSuccess

// required uint64 requestId = 1;
bool AuthenticateWebSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthenticateWebSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthenticateWebSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthenticateWebSuccess::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::uint64 AuthenticateWebSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebSuccess.requestId)
  return requestid_;
}
void AuthenticateWebSuccess::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebSuccess.requestId)
}

// required uint64 userId = 2;
bool AuthenticateWebSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthenticateWebSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthenticateWebSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthenticateWebSuccess::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
::google::protobuf::uint64 AuthenticateWebSuccess::userid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebSuccess.userId)
  return userid_;
}
void AuthenticateWebSuccess::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebSuccess.userId)
}

// required string loginDate = 3;
bool AuthenticateWebSuccess::has_logindate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AuthenticateWebSuccess::set_has_logindate() {
  _has_bits_[0] |= 0x00000004u;
}
void AuthenticateWebSuccess::clear_has_logindate() {
  _has_bits_[0] &= ~0x00000004u;
}
void AuthenticateWebSuccess::clear_logindate() {
  logindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logindate();
}
const ::std::string& AuthenticateWebSuccess::logindate() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
  return logindate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateWebSuccess::set_logindate(const ::std::string& value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}
void AuthenticateWebSuccess::set_logindate(const char* value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}
void AuthenticateWebSuccess::set_logindate(const char* value, size_t size) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}
::std::string* AuthenticateWebSuccess::mutable_logindate() {
  set_has_logindate();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
  return logindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateWebSuccess::release_logindate() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
  clear_has_logindate();
  return logindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateWebSuccess::set_allocated_logindate(::std::string* logindate) {
  if (logindate != NULL) {
    set_has_logindate();
  } else {
    clear_has_logindate();
  }
  logindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindate);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}

inline const AuthenticateWebSuccess* AuthenticateWebSuccess::internal_default_instance() {
  return &AuthenticateWebSuccess_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* AuthenticateWebFailure_e_Reason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateWebFailure_e_Reason_descriptor_;
}
bool AuthenticateWebFailure_e_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure::UNKNOWN_ERROR;
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure::INVALID_CREDENTIALS;
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure::INTERNAL_SERVER_ERROR;
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure::FAILED_TO_PARSE_PROTOCOL;
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure::e_Reason_MIN;
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure::e_Reason_MAX;
const int AuthenticateWebFailure::e_Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateWebFailure::kRequestIdFieldNumber;
const int AuthenticateWebFailure::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateWebFailure::AuthenticateWebFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AuthenticationDef_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolAuthentication.AuthenticateWebFailure)
}

void AuthenticateWebFailure::InitAsDefaultInstance() {
}

AuthenticateWebFailure::AuthenticateWebFailure(const AuthenticateWebFailure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtocolAuthentication.AuthenticateWebFailure)
}

void AuthenticateWebFailure::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&requestid_, 0, reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&requestid_) + sizeof(reason_));
}

AuthenticateWebFailure::~AuthenticateWebFailure() {
  // @@protoc_insertion_point(destructor:ProtocolAuthentication.AuthenticateWebFailure)
  SharedDtor();
}

void AuthenticateWebFailure::SharedDtor() {
}

void AuthenticateWebFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateWebFailure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateWebFailure_descriptor_;
}

const AuthenticateWebFailure& AuthenticateWebFailure::default_instance() {
  protobuf_InitDefaults_AuthenticationDef_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWebFailure> AuthenticateWebFailure_default_instance_;

AuthenticateWebFailure* AuthenticateWebFailure::New(::google::protobuf::Arena* arena) const {
  AuthenticateWebFailure* n = new AuthenticateWebFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateWebFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolAuthentication.AuthenticateWebFailure)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AuthenticateWebFailure, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AuthenticateWebFailure*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(requestid_, reason_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthenticateWebFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolAuthentication.AuthenticateWebFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (tag == 8) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reason;
        break;
      }

      // required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
      case 2: {
        if (tag == 16) {
         parse_reason:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ProtocolAuthentication::AuthenticateWebFailure_e_Reason_IsValid(value)) {
            set_reason(static_cast< ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolAuthentication.AuthenticateWebFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolAuthentication.AuthenticateWebFailure)
  return false;
#undef DO_
}

void AuthenticateWebFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolAuthentication.AuthenticateWebFailure)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
  if (has_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolAuthentication.AuthenticateWebFailure)
}

::google::protobuf::uint8* AuthenticateWebFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolAuthentication.AuthenticateWebFailure)
  // required uint64 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
  if (has_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolAuthentication.AuthenticateWebFailure)
  return target;
}

size_t AuthenticateWebFailure::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtocolAuthentication.AuthenticateWebFailure)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_reason()) {
    // required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  return total_size;
}
size_t AuthenticateWebFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolAuthentication.AuthenticateWebFailure)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateWebFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolAuthentication.AuthenticateWebFailure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthenticateWebFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateWebFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolAuthentication.AuthenticateWebFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolAuthentication.AuthenticateWebFailure)
    UnsafeMergeFrom(*source);
  }
}

void AuthenticateWebFailure::MergeFrom(const AuthenticateWebFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolAuthentication.AuthenticateWebFailure)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthenticateWebFailure::UnsafeMergeFrom(const AuthenticateWebFailure& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthenticateWebFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolAuthentication.AuthenticateWebFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateWebFailure::CopyFrom(const AuthenticateWebFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolAuthentication.AuthenticateWebFailure)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthenticateWebFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AuthenticateWebFailure::Swap(AuthenticateWebFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateWebFailure::InternalSwap(AuthenticateWebFailure* other) {
  std::swap(requestid_, other->requestid_);
  std::swap(reason_, other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateWebFailure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticateWebFailure_descriptor_;
  metadata.reflection = AuthenticateWebFailure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticateWebFailure

// required uint64 requestId = 1;
bool AuthenticateWebFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthenticateWebFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthenticateWebFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthenticateWebFailure::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
::google::protobuf::uint64 AuthenticateWebFailure::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebFailure.requestId)
  return requestid_;
}
void AuthenticateWebFailure::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebFailure.requestId)
}

// required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
bool AuthenticateWebFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthenticateWebFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthenticateWebFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthenticateWebFailure::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
::ProtocolAuthentication::AuthenticateWebFailure_e_Reason AuthenticateWebFailure::reason() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebFailure.reason)
  return static_cast< ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason >(reason_);
}
void AuthenticateWebFailure::set_reason(::ProtocolAuthentication::AuthenticateWebFailure_e_Reason value) {
  assert(::ProtocolAuthentication::AuthenticateWebFailure_e_Reason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebFailure.reason)
}

inline const AuthenticateWebFailure* AuthenticateWebFailure::internal_default_instance() {
  return &AuthenticateWebFailure_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtocolAuthentication

// @@protoc_insertion_point(global_scope)
