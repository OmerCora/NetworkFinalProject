// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AuthenticationDef.proto

#ifndef PROTOBUF_AuthenticationDef_2eproto__INCLUDED
#define PROTOBUF_AuthenticationDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtocolAuthentication {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_AuthenticationDef_2eproto();
void protobuf_InitDefaults_AuthenticationDef_2eproto();
void protobuf_AssignDesc_AuthenticationDef_2eproto();
void protobuf_ShutdownFile_AuthenticationDef_2eproto();

class AuthenticateWeb;
class AuthenticateWebFailure;
class AuthenticateWebSuccess;
class CreateAccountWeb;
class CreateAccountWebFailure;
class CreateAccountWebSuccess;

enum CreateAccountWebFailure_e_Reason {
  CreateAccountWebFailure_e_Reason_UNKNOWN_ERROR = 0,
  CreateAccountWebFailure_e_Reason_ACCOUNT_ALREADY_EXISTS = 1,
  CreateAccountWebFailure_e_Reason_INVALID_PASSWORD = 2,
  CreateAccountWebFailure_e_Reason_INTERNAL_SERVER_ERROR = 3,
  CreateAccountWebFailure_e_Reason_FAILED_TO_PARSE_PROTOCOL = 4
};
bool CreateAccountWebFailure_e_Reason_IsValid(int value);
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure_e_Reason_e_Reason_MIN = CreateAccountWebFailure_e_Reason_UNKNOWN_ERROR;
const CreateAccountWebFailure_e_Reason CreateAccountWebFailure_e_Reason_e_Reason_MAX = CreateAccountWebFailure_e_Reason_FAILED_TO_PARSE_PROTOCOL;
const int CreateAccountWebFailure_e_Reason_e_Reason_ARRAYSIZE = CreateAccountWebFailure_e_Reason_e_Reason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateAccountWebFailure_e_Reason_descriptor();
inline const ::std::string& CreateAccountWebFailure_e_Reason_Name(CreateAccountWebFailure_e_Reason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateAccountWebFailure_e_Reason_descriptor(), value);
}
inline bool CreateAccountWebFailure_e_Reason_Parse(
    const ::std::string& name, CreateAccountWebFailure_e_Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateAccountWebFailure_e_Reason>(
    CreateAccountWebFailure_e_Reason_descriptor(), name, value);
}
enum AuthenticateWebFailure_e_Reason {
  AuthenticateWebFailure_e_Reason_UNKNOWN_ERROR = 0,
  AuthenticateWebFailure_e_Reason_INVALID_CREDENTIALS = 1,
  AuthenticateWebFailure_e_Reason_INTERNAL_SERVER_ERROR = 2,
  AuthenticateWebFailure_e_Reason_FAILED_TO_PARSE_PROTOCOL = 3
};
bool AuthenticateWebFailure_e_Reason_IsValid(int value);
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure_e_Reason_e_Reason_MIN = AuthenticateWebFailure_e_Reason_UNKNOWN_ERROR;
const AuthenticateWebFailure_e_Reason AuthenticateWebFailure_e_Reason_e_Reason_MAX = AuthenticateWebFailure_e_Reason_FAILED_TO_PARSE_PROTOCOL;
const int AuthenticateWebFailure_e_Reason_e_Reason_ARRAYSIZE = AuthenticateWebFailure_e_Reason_e_Reason_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthenticateWebFailure_e_Reason_descriptor();
inline const ::std::string& AuthenticateWebFailure_e_Reason_Name(AuthenticateWebFailure_e_Reason value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthenticateWebFailure_e_Reason_descriptor(), value);
}
inline bool AuthenticateWebFailure_e_Reason_Parse(
    const ::std::string& name, AuthenticateWebFailure_e_Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthenticateWebFailure_e_Reason>(
    AuthenticateWebFailure_e_Reason_descriptor(), name, value);
}
// ===================================================================

class CreateAccountWeb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolAuthentication.CreateAccountWeb) */ {
 public:
  CreateAccountWeb();
  virtual ~CreateAccountWeb();

  CreateAccountWeb(const CreateAccountWeb& from);

  inline CreateAccountWeb& operator=(const CreateAccountWeb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountWeb& default_instance();

  static const CreateAccountWeb* internal_default_instance();

  void Swap(CreateAccountWeb* other);

  // implements Message ----------------------------------------------

  inline CreateAccountWeb* New() const { return New(NULL); }

  CreateAccountWeb* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateAccountWeb& from);
  void MergeFrom(const CreateAccountWeb& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateAccountWeb* other);
  void UnsafeMergeFrom(const CreateAccountWeb& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required string email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string plaintextPassword = 3;
  bool has_plaintextpassword() const;
  void clear_plaintextpassword();
  static const int kPlaintextPasswordFieldNumber = 3;
  const ::std::string& plaintextpassword() const;
  void set_plaintextpassword(const ::std::string& value);
  void set_plaintextpassword(const char* value);
  void set_plaintextpassword(const char* value, size_t size);
  ::std::string* mutable_plaintextpassword();
  ::std::string* release_plaintextpassword();
  void set_allocated_plaintextpassword(::std::string* plaintextpassword);

  // @@protoc_insertion_point(class_scope:ProtocolAuthentication.CreateAccountWeb)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_plaintextpassword();
  inline void clear_has_plaintextpassword();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr plaintextpassword_;
  ::google::protobuf::uint64 requestid_;
  friend void  protobuf_InitDefaults_AuthenticationDef_2eproto_impl();
  friend void  protobuf_AddDesc_AuthenticationDef_2eproto_impl();
  friend void protobuf_AssignDesc_AuthenticationDef_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationDef_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWeb> CreateAccountWeb_default_instance_;

// -------------------------------------------------------------------

class CreateAccountWebSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolAuthentication.CreateAccountWebSuccess) */ {
 public:
  CreateAccountWebSuccess();
  virtual ~CreateAccountWebSuccess();

  CreateAccountWebSuccess(const CreateAccountWebSuccess& from);

  inline CreateAccountWebSuccess& operator=(const CreateAccountWebSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountWebSuccess& default_instance();

  static const CreateAccountWebSuccess* internal_default_instance();

  void Swap(CreateAccountWebSuccess* other);

  // implements Message ----------------------------------------------

  inline CreateAccountWebSuccess* New() const { return New(NULL); }

  CreateAccountWebSuccess* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateAccountWebSuccess& from);
  void MergeFrom(const CreateAccountWebSuccess& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateAccountWebSuccess* other);
  void UnsafeMergeFrom(const CreateAccountWebSuccess& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required uint64 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 userid() const;
  void set_userid(::google::protobuf::uint64 value);

  // required string creationDate = 3;
  bool has_creationdate() const;
  void clear_creationdate();
  static const int kCreationDateFieldNumber = 3;
  const ::std::string& creationdate() const;
  void set_creationdate(const ::std::string& value);
  void set_creationdate(const char* value);
  void set_creationdate(const char* value, size_t size);
  ::std::string* mutable_creationdate();
  ::std::string* release_creationdate();
  void set_allocated_creationdate(::std::string* creationdate);

  // @@protoc_insertion_point(class_scope:ProtocolAuthentication.CreateAccountWebSuccess)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_creationdate();
  inline void clear_has_creationdate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr creationdate_;
  ::google::protobuf::uint64 requestid_;
  ::google::protobuf::uint64 userid_;
  friend void  protobuf_InitDefaults_AuthenticationDef_2eproto_impl();
  friend void  protobuf_AddDesc_AuthenticationDef_2eproto_impl();
  friend void protobuf_AssignDesc_AuthenticationDef_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationDef_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWebSuccess> CreateAccountWebSuccess_default_instance_;

// -------------------------------------------------------------------

class CreateAccountWebFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolAuthentication.CreateAccountWebFailure) */ {
 public:
  CreateAccountWebFailure();
  virtual ~CreateAccountWebFailure();

  CreateAccountWebFailure(const CreateAccountWebFailure& from);

  inline CreateAccountWebFailure& operator=(const CreateAccountWebFailure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountWebFailure& default_instance();

  static const CreateAccountWebFailure* internal_default_instance();

  void Swap(CreateAccountWebFailure* other);

  // implements Message ----------------------------------------------

  inline CreateAccountWebFailure* New() const { return New(NULL); }

  CreateAccountWebFailure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateAccountWebFailure& from);
  void MergeFrom(const CreateAccountWebFailure& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateAccountWebFailure* other);
  void UnsafeMergeFrom(const CreateAccountWebFailure& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreateAccountWebFailure_e_Reason e_Reason;
  static const e_Reason UNKNOWN_ERROR =
    CreateAccountWebFailure_e_Reason_UNKNOWN_ERROR;
  static const e_Reason ACCOUNT_ALREADY_EXISTS =
    CreateAccountWebFailure_e_Reason_ACCOUNT_ALREADY_EXISTS;
  static const e_Reason INVALID_PASSWORD =
    CreateAccountWebFailure_e_Reason_INVALID_PASSWORD;
  static const e_Reason INTERNAL_SERVER_ERROR =
    CreateAccountWebFailure_e_Reason_INTERNAL_SERVER_ERROR;
  static const e_Reason FAILED_TO_PARSE_PROTOCOL =
    CreateAccountWebFailure_e_Reason_FAILED_TO_PARSE_PROTOCOL;
  static inline bool e_Reason_IsValid(int value) {
    return CreateAccountWebFailure_e_Reason_IsValid(value);
  }
  static const e_Reason e_Reason_MIN =
    CreateAccountWebFailure_e_Reason_e_Reason_MIN;
  static const e_Reason e_Reason_MAX =
    CreateAccountWebFailure_e_Reason_e_Reason_MAX;
  static const int e_Reason_ARRAYSIZE =
    CreateAccountWebFailure_e_Reason_e_Reason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  e_Reason_descriptor() {
    return CreateAccountWebFailure_e_Reason_descriptor();
  }
  static inline const ::std::string& e_Reason_Name(e_Reason value) {
    return CreateAccountWebFailure_e_Reason_Name(value);
  }
  static inline bool e_Reason_Parse(const ::std::string& name,
      e_Reason* value) {
    return CreateAccountWebFailure_e_Reason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason reason() const;
  void set_reason(::ProtocolAuthentication::CreateAccountWebFailure_e_Reason value);

  // @@protoc_insertion_point(class_scope:ProtocolAuthentication.CreateAccountWebFailure)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 requestid_;
  int reason_;
  friend void  protobuf_InitDefaults_AuthenticationDef_2eproto_impl();
  friend void  protobuf_AddDesc_AuthenticationDef_2eproto_impl();
  friend void protobuf_AssignDesc_AuthenticationDef_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationDef_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWebFailure> CreateAccountWebFailure_default_instance_;

// -------------------------------------------------------------------

class AuthenticateWeb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolAuthentication.AuthenticateWeb) */ {
 public:
  AuthenticateWeb();
  virtual ~AuthenticateWeb();

  AuthenticateWeb(const AuthenticateWeb& from);

  inline AuthenticateWeb& operator=(const AuthenticateWeb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateWeb& default_instance();

  static const AuthenticateWeb* internal_default_instance();

  void Swap(AuthenticateWeb* other);

  // implements Message ----------------------------------------------

  inline AuthenticateWeb* New() const { return New(NULL); }

  AuthenticateWeb* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticateWeb& from);
  void MergeFrom(const AuthenticateWeb& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthenticateWeb* other);
  void UnsafeMergeFrom(const AuthenticateWeb& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required string email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string plaintextPassword = 3;
  bool has_plaintextpassword() const;
  void clear_plaintextpassword();
  static const int kPlaintextPasswordFieldNumber = 3;
  const ::std::string& plaintextpassword() const;
  void set_plaintextpassword(const ::std::string& value);
  void set_plaintextpassword(const char* value);
  void set_plaintextpassword(const char* value, size_t size);
  ::std::string* mutable_plaintextpassword();
  ::std::string* release_plaintextpassword();
  void set_allocated_plaintextpassword(::std::string* plaintextpassword);

  // @@protoc_insertion_point(class_scope:ProtocolAuthentication.AuthenticateWeb)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_plaintextpassword();
  inline void clear_has_plaintextpassword();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr plaintextpassword_;
  ::google::protobuf::uint64 requestid_;
  friend void  protobuf_InitDefaults_AuthenticationDef_2eproto_impl();
  friend void  protobuf_AddDesc_AuthenticationDef_2eproto_impl();
  friend void protobuf_AssignDesc_AuthenticationDef_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationDef_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWeb> AuthenticateWeb_default_instance_;

// -------------------------------------------------------------------

class AuthenticateWebSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolAuthentication.AuthenticateWebSuccess) */ {
 public:
  AuthenticateWebSuccess();
  virtual ~AuthenticateWebSuccess();

  AuthenticateWebSuccess(const AuthenticateWebSuccess& from);

  inline AuthenticateWebSuccess& operator=(const AuthenticateWebSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateWebSuccess& default_instance();

  static const AuthenticateWebSuccess* internal_default_instance();

  void Swap(AuthenticateWebSuccess* other);

  // implements Message ----------------------------------------------

  inline AuthenticateWebSuccess* New() const { return New(NULL); }

  AuthenticateWebSuccess* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticateWebSuccess& from);
  void MergeFrom(const AuthenticateWebSuccess& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthenticateWebSuccess* other);
  void UnsafeMergeFrom(const AuthenticateWebSuccess& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required uint64 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 userid() const;
  void set_userid(::google::protobuf::uint64 value);

  // required string loginDate = 3;
  bool has_logindate() const;
  void clear_logindate();
  static const int kLoginDateFieldNumber = 3;
  const ::std::string& logindate() const;
  void set_logindate(const ::std::string& value);
  void set_logindate(const char* value);
  void set_logindate(const char* value, size_t size);
  ::std::string* mutable_logindate();
  ::std::string* release_logindate();
  void set_allocated_logindate(::std::string* logindate);

  // @@protoc_insertion_point(class_scope:ProtocolAuthentication.AuthenticateWebSuccess)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_logindate();
  inline void clear_has_logindate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr logindate_;
  ::google::protobuf::uint64 requestid_;
  ::google::protobuf::uint64 userid_;
  friend void  protobuf_InitDefaults_AuthenticationDef_2eproto_impl();
  friend void  protobuf_AddDesc_AuthenticationDef_2eproto_impl();
  friend void protobuf_AssignDesc_AuthenticationDef_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationDef_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWebSuccess> AuthenticateWebSuccess_default_instance_;

// -------------------------------------------------------------------

class AuthenticateWebFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolAuthentication.AuthenticateWebFailure) */ {
 public:
  AuthenticateWebFailure();
  virtual ~AuthenticateWebFailure();

  AuthenticateWebFailure(const AuthenticateWebFailure& from);

  inline AuthenticateWebFailure& operator=(const AuthenticateWebFailure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateWebFailure& default_instance();

  static const AuthenticateWebFailure* internal_default_instance();

  void Swap(AuthenticateWebFailure* other);

  // implements Message ----------------------------------------------

  inline AuthenticateWebFailure* New() const { return New(NULL); }

  AuthenticateWebFailure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticateWebFailure& from);
  void MergeFrom(const AuthenticateWebFailure& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthenticateWebFailure* other);
  void UnsafeMergeFrom(const AuthenticateWebFailure& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AuthenticateWebFailure_e_Reason e_Reason;
  static const e_Reason UNKNOWN_ERROR =
    AuthenticateWebFailure_e_Reason_UNKNOWN_ERROR;
  static const e_Reason INVALID_CREDENTIALS =
    AuthenticateWebFailure_e_Reason_INVALID_CREDENTIALS;
  static const e_Reason INTERNAL_SERVER_ERROR =
    AuthenticateWebFailure_e_Reason_INTERNAL_SERVER_ERROR;
  static const e_Reason FAILED_TO_PARSE_PROTOCOL =
    AuthenticateWebFailure_e_Reason_FAILED_TO_PARSE_PROTOCOL;
  static inline bool e_Reason_IsValid(int value) {
    return AuthenticateWebFailure_e_Reason_IsValid(value);
  }
  static const e_Reason e_Reason_MIN =
    AuthenticateWebFailure_e_Reason_e_Reason_MIN;
  static const e_Reason e_Reason_MAX =
    AuthenticateWebFailure_e_Reason_e_Reason_MAX;
  static const int e_Reason_ARRAYSIZE =
    AuthenticateWebFailure_e_Reason_e_Reason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  e_Reason_descriptor() {
    return AuthenticateWebFailure_e_Reason_descriptor();
  }
  static inline const ::std::string& e_Reason_Name(e_Reason value) {
    return AuthenticateWebFailure_e_Reason_Name(value);
  }
  static inline bool e_Reason_Parse(const ::std::string& name,
      e_Reason* value) {
    return AuthenticateWebFailure_e_Reason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason reason() const;
  void set_reason(::ProtocolAuthentication::AuthenticateWebFailure_e_Reason value);

  // @@protoc_insertion_point(class_scope:ProtocolAuthentication.AuthenticateWebFailure)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 requestid_;
  int reason_;
  friend void  protobuf_InitDefaults_AuthenticationDef_2eproto_impl();
  friend void  protobuf_AddDesc_AuthenticationDef_2eproto_impl();
  friend void protobuf_AssignDesc_AuthenticationDef_2eproto();
  friend void protobuf_ShutdownFile_AuthenticationDef_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWebFailure> AuthenticateWebFailure_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccountWeb

// required uint64 requestId = 1;
inline bool CreateAccountWeb::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountWeb::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountWeb::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountWeb::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CreateAccountWeb::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWeb.requestId)
  return requestid_;
}
inline void CreateAccountWeb::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWeb.requestId)
}

// required string email = 2;
inline bool CreateAccountWeb::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountWeb::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountWeb::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountWeb::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& CreateAccountWeb::email() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWeb.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWeb::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWeb.email)
}
inline void CreateAccountWeb::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.CreateAccountWeb.email)
}
inline void CreateAccountWeb::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.CreateAccountWeb.email)
}
inline ::std::string* CreateAccountWeb::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.CreateAccountWeb.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccountWeb::release_email() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.CreateAccountWeb.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWeb::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.CreateAccountWeb.email)
}

// required string plaintextPassword = 3;
inline bool CreateAccountWeb::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAccountWeb::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAccountWeb::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAccountWeb::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
inline const ::std::string& CreateAccountWeb::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
  return plaintextpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWeb::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}
inline void CreateAccountWeb::set_plaintextpassword(const char* value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}
inline void CreateAccountWeb::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}
inline ::std::string* CreateAccountWeb::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccountWeb::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWeb::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.CreateAccountWeb.plaintextPassword)
}

inline const CreateAccountWeb* CreateAccountWeb::internal_default_instance() {
  return &CreateAccountWeb_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateAccountWebSuccess

// required uint64 requestId = 1;
inline bool CreateAccountWebSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountWebSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountWebSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountWebSuccess::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CreateAccountWebSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebSuccess.requestId)
  return requestid_;
}
inline void CreateAccountWebSuccess::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebSuccess.requestId)
}

// required uint64 userId = 2;
inline bool CreateAccountWebSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountWebSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountWebSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountWebSuccess::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 CreateAccountWebSuccess::userid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebSuccess.userId)
  return userid_;
}
inline void CreateAccountWebSuccess::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebSuccess.userId)
}

// required string creationDate = 3;
inline bool CreateAccountWebSuccess::has_creationdate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAccountWebSuccess::set_has_creationdate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAccountWebSuccess::clear_has_creationdate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAccountWebSuccess::clear_creationdate() {
  creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creationdate();
}
inline const ::std::string& CreateAccountWebSuccess::creationdate() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
  return creationdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWebSuccess::set_creationdate(const ::std::string& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}
inline void CreateAccountWebSuccess::set_creationdate(const char* value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}
inline void CreateAccountWebSuccess::set_creationdate(const char* value, size_t size) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}
inline ::std::string* CreateAccountWebSuccess::mutable_creationdate() {
  set_has_creationdate();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
  return creationdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccountWebSuccess::release_creationdate() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
  clear_has_creationdate();
  return creationdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWebSuccess::set_allocated_creationdate(::std::string* creationdate) {
  if (creationdate != NULL) {
    set_has_creationdate();
  } else {
    clear_has_creationdate();
  }
  creationdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creationdate);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.CreateAccountWebSuccess.creationDate)
}

inline const CreateAccountWebSuccess* CreateAccountWebSuccess::internal_default_instance() {
  return &CreateAccountWebSuccess_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateAccountWebFailure

// required uint64 requestId = 1;
inline bool CreateAccountWebFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountWebFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountWebFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountWebFailure::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CreateAccountWebFailure::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebFailure.requestId)
  return requestid_;
}
inline void CreateAccountWebFailure::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebFailure.requestId)
}

// required .ProtocolAuthentication.CreateAccountWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
inline bool CreateAccountWebFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountWebFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountWebFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountWebFailure::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason CreateAccountWebFailure::reason() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.CreateAccountWebFailure.reason)
  return static_cast< ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason >(reason_);
}
inline void CreateAccountWebFailure::set_reason(::ProtocolAuthentication::CreateAccountWebFailure_e_Reason value) {
  assert(::ProtocolAuthentication::CreateAccountWebFailure_e_Reason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.CreateAccountWebFailure.reason)
}

inline const CreateAccountWebFailure* CreateAccountWebFailure::internal_default_instance() {
  return &CreateAccountWebFailure_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthenticateWeb

// required uint64 requestId = 1;
inline bool AuthenticateWeb::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateWeb::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateWeb::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateWeb::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 AuthenticateWeb::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWeb.requestId)
  return requestid_;
}
inline void AuthenticateWeb::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWeb.requestId)
}

// required string email = 2;
inline bool AuthenticateWeb::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateWeb::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateWeb::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateWeb::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& AuthenticateWeb::email() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWeb.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWeb::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWeb.email)
}
inline void AuthenticateWeb::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.AuthenticateWeb.email)
}
inline void AuthenticateWeb::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.AuthenticateWeb.email)
}
inline ::std::string* AuthenticateWeb::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.AuthenticateWeb.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWeb::release_email() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.AuthenticateWeb.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWeb::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.AuthenticateWeb.email)
}

// required string plaintextPassword = 3;
inline bool AuthenticateWeb::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthenticateWeb::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthenticateWeb::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthenticateWeb::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
inline const ::std::string& AuthenticateWeb::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
  return plaintextpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWeb::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}
inline void AuthenticateWeb::set_plaintextpassword(const char* value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}
inline void AuthenticateWeb::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}
inline ::std::string* AuthenticateWeb::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWeb::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWeb::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.AuthenticateWeb.plaintextPassword)
}

inline const AuthenticateWeb* AuthenticateWeb::internal_default_instance() {
  return &AuthenticateWeb_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthenticateWebSuccess

// required uint64 requestId = 1;
inline bool AuthenticateWebSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateWebSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateWebSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateWebSuccess::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 AuthenticateWebSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebSuccess.requestId)
  return requestid_;
}
inline void AuthenticateWebSuccess::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebSuccess.requestId)
}

// required uint64 userId = 2;
inline bool AuthenticateWebSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateWebSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateWebSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateWebSuccess::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 AuthenticateWebSuccess::userid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebSuccess.userId)
  return userid_;
}
inline void AuthenticateWebSuccess::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebSuccess.userId)
}

// required string loginDate = 3;
inline bool AuthenticateWebSuccess::has_logindate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthenticateWebSuccess::set_has_logindate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthenticateWebSuccess::clear_has_logindate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthenticateWebSuccess::clear_logindate() {
  logindate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logindate();
}
inline const ::std::string& AuthenticateWebSuccess::logindate() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
  return logindate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWebSuccess::set_logindate(const ::std::string& value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}
inline void AuthenticateWebSuccess::set_logindate(const char* value) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}
inline void AuthenticateWebSuccess::set_logindate(const char* value, size_t size) {
  set_has_logindate();
  logindate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}
inline ::std::string* AuthenticateWebSuccess::mutable_logindate() {
  set_has_logindate();
  // @@protoc_insertion_point(field_mutable:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
  return logindate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWebSuccess::release_logindate() {
  // @@protoc_insertion_point(field_release:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
  clear_has_logindate();
  return logindate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWebSuccess::set_allocated_logindate(::std::string* logindate) {
  if (logindate != NULL) {
    set_has_logindate();
  } else {
    clear_has_logindate();
  }
  logindate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindate);
  // @@protoc_insertion_point(field_set_allocated:ProtocolAuthentication.AuthenticateWebSuccess.loginDate)
}

inline const AuthenticateWebSuccess* AuthenticateWebSuccess::internal_default_instance() {
  return &AuthenticateWebSuccess_default_instance_.get();
}
// -------------------------------------------------------------------

// AuthenticateWebFailure

// required uint64 requestId = 1;
inline bool AuthenticateWebFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateWebFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateWebFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateWebFailure::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 AuthenticateWebFailure::requestid() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebFailure.requestId)
  return requestid_;
}
inline void AuthenticateWebFailure::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebFailure.requestId)
}

// required .ProtocolAuthentication.AuthenticateWebFailure.e_Reason reason = 2 [default = UNKNOWN_ERROR];
inline bool AuthenticateWebFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateWebFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateWebFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateWebFailure::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason AuthenticateWebFailure::reason() const {
  // @@protoc_insertion_point(field_get:ProtocolAuthentication.AuthenticateWebFailure.reason)
  return static_cast< ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason >(reason_);
}
inline void AuthenticateWebFailure::set_reason(::ProtocolAuthentication::AuthenticateWebFailure_e_Reason value) {
  assert(::ProtocolAuthentication::AuthenticateWebFailure_e_Reason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:ProtocolAuthentication.AuthenticateWebFailure.reason)
}

inline const AuthenticateWebFailure* AuthenticateWebFailure::internal_default_instance() {
  return &AuthenticateWebFailure_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtocolAuthentication

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason>() {
  return ::ProtocolAuthentication::CreateAccountWebFailure_e_Reason_descriptor();
}
template <> struct is_proto_enum< ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason>() {
  return ::ProtocolAuthentication::AuthenticateWebFailure_e_Reason_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AuthenticationDef_2eproto__INCLUDED
